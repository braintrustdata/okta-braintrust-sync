# Hybrid Okta-Braintrust Sync Configuration
# This example shows a complete hybrid configuration with both declarative and real-time sync

# Okta source configuration
okta:
  domain: "${OKTA_DOMAIN}"  # e.g., "myorg.okta.com"
  api_token: "${OKTA_API_TOKEN}"
  webhook_secret: "${OKTA_WEBHOOK_SECRET}"
  rate_limit_per_minute: 600
  timeout_seconds: 30

# Target Braintrust organizations
braintrust_orgs:
  production:
    api_key: "${BT_PROD_API_KEY}"
    url: "https://api.braintrust.dev"
    timeout_seconds: 30
    rate_limit_per_minute: 300
  
  staging:
    api_key: "${BT_STAGING_API_KEY}"
    url: "https://api.braintrust.dev"
    timeout_seconds: 30
    rate_limit_per_minute: 300

# Sync modes configuration
sync_modes:
  # Declarative mode (Terraform-like batch sync)
  declarative:
    enabled: true
    schedule: "0 */4 * * *"           # Every 4 hours
    full_reconciliation: "0 2 * * 0"  # Weekly full sync on Sunday 2 AM
    max_concurrent_orgs: 2            # Sync max 2 orgs simultaneously
  
  # Real-time mode (webhook-driven)
  realtime:
    enabled: true
    webhook_port: 8080
    webhook_host: "0.0.0.0"
    queue_backend: "redis"            # redis, memory, database
    max_queue_size: 10000
    worker_count: 4
    critical_events_only: true       # Only security-critical events
  
  # Priority rules for determining which mode handles which events
  priority_rules:
    # Security-critical events go to real-time mode
    - event_types:
        - "user.lifecycle.deactivate"
        - "user.lifecycle.suspend"
        - "group.user_membership.remove"
      mode: "realtime"
    
    # New users/groups go to both modes for redundancy
    - event_types:
        - "user.lifecycle.create"
        - "user.lifecycle.activate"
        - "group.lifecycle.create"
        - "group.user_membership.add"
      mode: "both"
    
    # Everything else goes to declarative mode
    - event_types:
        - "user.lifecycle.update"
        - "group.lifecycle.update"
      mode: "declarative"

# Sync rules - who gets synced where
sync_rules:
  # User synchronization
  users:
    enabled: true
    
    # Identity mapping strategy
    identity_mapping:
      strategy: "email"              # email, custom_field, mapping_file
      case_sensitive: false
    
    # User sync behavior
    create_missing: true
    update_existing: true
    sync_profile_fields:
      - "firstName"
      - "lastName"
      - "email"
      - "login"
      - "department"
      - "title"
    
    # User mapping rules
    mappings:
      # Engineering users go to both prod and staging
      - okta_filter: 'profile.department eq "Engineering"'
        braintrust_orgs: ["production", "staging"]
        enabled: true
      
      # QA users only go to staging
      - okta_filter: 'profile.department eq "QA"'
        braintrust_orgs: ["staging"]
        enabled: true
      
      # Product users go to production only
      - okta_filter: 'profile.department eq "Product"'
        braintrust_orgs: ["production"]
        enabled: true
      
      # Contractors (external users) go to staging only
      - okta_filter: 'profile.userType eq "Contractor"'
        braintrust_orgs: ["staging"]
        enabled: true

  # Group synchronization
  groups:
    enabled: true
    
    # Group sync behavior
    create_missing: true
    update_existing: true
    sync_members: true
    sync_description: true
    
    # Group mapping rules
    mappings:
      # Engineering groups to both environments with prefix
      - okta_group_filter: 'type eq "OKTA_GROUP" and profile.name sw "Engineering"'
        braintrust_orgs: ["production", "staging"]
        name_transform: "okta-{group.name}"
        enabled: true
      
      # QA groups to staging only
      - okta_group_filter: 'profile.name sw "QA"'
        braintrust_orgs: ["staging"]
        name_transform: "okta-{group.name}"
        enabled: true
      
      # Admin groups to production only
      - okta_group_filter: 'profile.name sw "Admin"'
        braintrust_orgs: ["production"]
        name_transform: "okta-{group.name}"
        enabled: true
      
      # Everyone group to all environments (no prefix)
      - okta_group_filter: 'profile.name eq "Everyone"'
        braintrust_orgs: ["production", "staging"]
        name_transform: "{group.name}"
        enabled: true

# General sync options
sync_options:
  dry_run: false                    # Set to true for testing
  batch_size: 50                    # Number of resources per batch
  max_retries: 3                    # Retry attempts for failed operations
  retry_delay_seconds: 1.0          # Initial retry delay
  remove_extra: false               # Don't delete users/groups not in Okta (SCIM-like)
  continue_on_error: true           # Continue processing after individual errors

# Audit and logging configuration
audit:
  enabled: true
  log_level: "INFO"                 # DEBUG, INFO, WARNING, ERROR
  log_format: "json"                # json, text
  log_file: "./logs/sync-{timestamp}.log"
  retention_days: 90
  include_sensitive_data: false     # Don't log sensitive data in production

# External service configurations
redis_url: "${REDIS_URL:redis://localhost:6379/0}"
database_url: "${DATABASE_URL:sqlite:///./state/sync.db}"