# =====================================================================
# Example Group Assignment Configurations
# =====================================================================
# This file demonstrates different strategies for assigning users to 
# Braintrust groups based on their Okta data.
#
# Three strategies are available:
# 1. okta_groups: Map Okta groups directly to Braintrust groups
# 2. attributes: Map based on user profile attributes
# 3. hybrid: Combine both approaches
# =====================================================================

# ---------------------------------------------------------------------
# EXAMPLE 1: Okta Groups Strategy (Direct Mapping)
# ---------------------------------------------------------------------
# Use this when you want to mirror Okta group memberships in Braintrust
# or map specific Okta groups to different Braintrust group names
okta_groups_example:
  group_assignment:
    strategy: okta_groups
    
    # Option 1: Explicit mappings for specific groups
    okta_group_mappings:
      # Exact name mapping
      - okta_group_name: "Engineering-Team"
        braintrust_group_name: "Engineers"
      
      # Pattern-based mapping using regex
      - okta_group_pattern: "^dept-.*"
        braintrust_group_name: "Department Groups"
      
      # Map multiple Okta groups to one Braintrust group
      - okta_group_pattern: "(Marketing|Sales|BizDev)"
        braintrust_group_name: "Go-to-Market Team"
    
    # Option 2: Auto-sync with same names (can be combined with mappings)
    sync_group_names: true  # Uses Okta group name as Braintrust group name
    
    # Create groups in Braintrust if they don't exist
    auto_create_groups: true
    
    # Exclude certain Okta groups from syncing
    exclude_groups:
      - "^test-.*"  # Exclude test groups
      - "Everyone"  # Exclude default Okta group
    
    # Add all users to these groups by default
    default_groups:
      - "All Employees"
      - "Standard Access"

# ---------------------------------------------------------------------
# EXAMPLE 2: Attributes Strategy (Profile-Based Mapping)
# ---------------------------------------------------------------------
# Use this when you want to assign groups based on user attributes
# like department, title, location, or custom fields
attributes_example:
  group_assignment:
    strategy: attributes
    
    attribute_mappings:
      # Engineering managers get special access
      - rule:
          conditions:
            - attribute: department
              operator: equals
              value: "Engineering"
            - attribute: title
              operator: contains
              value: "Manager"
          logic: AND
        braintrust_group_name: "Engineering Managers"
        priority: 10  # Higher priority rules are evaluated first
      
      # All engineers (including managers due to priority)
      - rule:
          conditions:
            - attribute: department
              operator: equals
              value: "Engineering"
        braintrust_group_name: "Engineering Team"
        priority: 5
      
      # Remote workers
      - rule:
          conditions:
            - attribute: location
              operator: not_equals
              value: "HQ"
        braintrust_group_name: "Remote Team"
        priority: 3
      
      # Senior staff (multiple title patterns)
      - rule:
          conditions:
            - attribute: title
              operator: regex
              value: "(Senior|Principal|Staff|Director|VP)"
              case_sensitive: false
        braintrust_group_name: "Senior Staff"
        priority: 7
      
      # Department-based groups using IN operator
      - rule:
          conditions:
            - attribute: department
              operator: in
              value: ["Sales", "Marketing", "Customer Success"]
        braintrust_group_name: "Customer Facing Teams"
        priority: 4
      
      # Users with specific custom attribute
      - rule:
          conditions:
            - attribute: customSecurityClearance
              operator: exists
        braintrust_group_name: "Cleared Personnel"
        priority: 8
    
    # Everyone gets these groups
    default_groups:
      - "All Users"
    
    # Limit groups per user (optional)
    max_groups_per_user: 10

# ---------------------------------------------------------------------
# EXAMPLE 3: Hybrid Strategy (Combine Groups and Attributes)
# ---------------------------------------------------------------------
# Use this for maximum flexibility, combining both Okta groups
# and user attributes to determine group assignments
hybrid_example:
  group_assignment:
    strategy: hybrid
    
    # How to combine results from both strategies
    hybrid_mode: merge  # Options: merge, attributes_first, groups_first
    
    # Okta group mappings (same as strategy 1)
    okta_group_mappings:
      - okta_group_name: "IT-Admins"
        braintrust_group_name: "System Administrators"
      - okta_group_pattern: "^project-.*"
        braintrust_group_name: "Project Teams"
    
    sync_group_names: true
    
    # Attribute mappings (same as strategy 2)
    attribute_mappings:
      # Contractors get specific group regardless of Okta groups
      - rule:
          conditions:
            - attribute: employeeType
              operator: equals
              value: "Contractor"
        braintrust_group_name: "External Contractors"
        priority: 100  # Very high priority
      
      # Location + department combination
      - rule:
          conditions:
            - attribute: location
              operator: equals
              value: "London"
            - attribute: department
              operator: equals
              value: "Engineering"
          logic: AND
        braintrust_group_name: "London Engineering"
        priority: 5
    
    # Common settings
    auto_create_groups: true
    default_groups:
      - "All Company"
    exclude_groups:
      - "^temp-.*"

# ---------------------------------------------------------------------
# EXAMPLE 4: Multi-Organization Configuration
# ---------------------------------------------------------------------
# Different rules for different Braintrust organizations
multi_org_example:
  # Global default configuration
  global_config:
    strategy: okta_groups
    sync_group_names: true
    auto_create_groups: false
    default_groups:
      - "Default Access"
  
  # Organization-specific overrides
  org_configs:
    # Production org uses Okta groups
    - braintrust_org: "production"
      enabled: true
      group_assignment:
        strategy: okta_groups
        okta_group_mappings:
          - okta_group_pattern: "^prod-.*"
            braintrust_group_name: "Production Access"
        sync_group_names: false
        auto_create_groups: false
    
    # Development org uses attributes for flexible testing
    - braintrust_org: "development"
      enabled: true
      group_assignment:
        strategy: attributes
        attribute_mappings:
          - rule:
              conditions:
                - attribute: department
                  operator: equals
                  value: "Engineering"
            braintrust_group_name: "Dev Access"
            priority: 1
        default_groups:
          - "Dev Environment"
    
    # Staging uses hybrid approach
    - braintrust_org: "staging"
      enabled: true
      group_assignment:
        strategy: hybrid
        hybrid_mode: groups_first
        sync_group_names: true
        attribute_mappings:
          - rule:
              conditions:
                - attribute: title
                  operator: contains
                  value: "QA"
            braintrust_group_name: "QA Team"
            priority: 10

# ---------------------------------------------------------------------
# EXAMPLE 5: Advanced Attribute Conditions
# ---------------------------------------------------------------------
# Demonstrates all available operators and complex conditions
advanced_attributes_example:
  group_assignment:
    strategy: attributes
    
    attribute_mappings:
      # Complex OR logic
      - rule:
          conditions:
            - attribute: title
              operator: contains
              value: "Engineer"
            - attribute: title
              operator: contains
              value: "Developer"
            - attribute: department
              operator: equals
              value: "Engineering"
          logic: OR  # User matches if ANY condition is true
        braintrust_group_name: "Technical Staff"
        priority: 5
      
      # Using NOT operators
      - rule:
          conditions:
            - attribute: employeeType
              operator: not_equals
              value: "Intern"
            - attribute: department
              operator: not_in
              value: ["HR", "Legal", "Finance"]
          logic: AND
        braintrust_group_name: "Core Team"
        priority: 3
      
      # Pattern matching
      - rule:
          conditions:
            - attribute: email
              operator: ends_with
              value: "@subsidiary.com"
        braintrust_group_name: "Subsidiary Employees"
        priority: 8
      
      # Check for missing attributes
      - rule:
          conditions:
            - attribute: manager
              operator: not_exists
        braintrust_group_name: "No Manager Assigned"
        priority: 1
      
      # Case-sensitive matching
      - rule:
          conditions:
            - attribute: costCenter
              operator: equals
              value: "EXEC-001"
              case_sensitive: true
        braintrust_group_name: "Executive Budget"
        priority: 10

# ---------------------------------------------------------------------
# EXAMPLE 6: Minimal Configuration
# ---------------------------------------------------------------------
# Simplest possible setup - just sync Okta groups as-is
minimal_example:
  group_assignment:
    strategy: okta_groups
    sync_group_names: true  # That's it! Groups sync 1:1 from Okta