# =====================================================================
# Complete Workflow Example: Okta → Groups → Roles → Projects
# =====================================================================
# This configuration demonstrates the full end-to-end workflow:
# 1. Sync users from Okta to Braintrust and assign them to groups
# 2. Define roles with specific permissions
# 3. Assign groups to roles on specific projects via ACLs
#
# This provides granular, maintainable access control at scale.
# =====================================================================

# Standard Braintrust configuration
okta:
  domain: "yourcompany.okta.com"
  api_token: "${OKTA_API_TOKEN}"

braintrust_orgs:
  production:
    api_key: "${BRAINTRUST_PROD_API_KEY}"
    url: "https://api.braintrust.dev"
  
  development:
    api_key: "${BRAINTRUST_DEV_API_KEY}"
    url: "https://api.braintrust.dev"

# ========== STEP 1: User and Group Sync ==========
# Define how users are synced and assigned to groups
sync_rules:
  users:
    enabled: true
    mappings:
      - okta_filter: 'status eq "ACTIVE"'
        braintrust_orgs: ["production", "development"]
        enabled: true
    
    create_missing: true
    update_existing: true

  groups:
    enabled: true
    mappings:
      - okta_group_filter: 'type eq "OKTA_GROUP" and profile.name sw "BT-"'
        braintrust_orgs: ["production", "development"]
        name_transform: "{group.name}"
        enabled: true
    
    create_missing: true
    sync_members: true

# ========== STEP 2: Group Assignment (Okta → Braintrust Groups) ==========
# Assign users to Braintrust groups based on Okta data
group_assignment:
  global_config:
    strategy: "hybrid"  # Use both Okta groups and attributes
    
    # Map Okta groups to Braintrust groups
    okta_group_mappings:
      - okta_group_name: "BT-Engineering"
        braintrust_group_name: "Engineering"
      - okta_group_name: "BT-DataScience"
        braintrust_group_name: "DataScience"
      - okta_group_name: "BT-ProductManagement"
        braintrust_group_name: "ProductManagement"
      - okta_group_name: "BT-Leadership"
        braintrust_group_name: "Leadership"
    
    # Also assign based on attributes for more granular control
    attribute_mappings:
      # Engineering managers get additional group
      - rule:
          conditions:
            - attribute: "department"
              operator: "equals"
              value: "Engineering"
            - attribute: "title"
              operator: "contains"
              value: "Manager"
          logic: "AND"
        braintrust_group_name: "EngineeringManagers"
        priority: 10
      
      # Senior staff across all departments
      - rule:
          conditions:
            - attribute: "title"
              operator: "regex"
              value: "(Senior|Principal|Staff|Director|VP)"
              case_sensitive: false
        braintrust_group_name: "SeniorStaff"
        priority: 8
      
      # Contractors get separate group
      - rule:
          conditions:
            - attribute: "employeeType"
              operator: "equals"
              value: "Contractor"
        braintrust_group_name: "ExternalContractors"
        priority: 15
    
    sync_group_names: true
    auto_create_groups: true
    default_groups: ["AllEmployees"]

# ========== STEP 3: Role-Project Assignment (Groups → Roles → Projects) ==========
# Define roles and assign groups to projects via those roles
role_project_assignment:
  # Global configuration for all orgs
  global_config:
    # ========== Standard Roles Definition ==========
    standard_roles:
      # Full administrative access
      - name: "Admin"
        description: "Full administrative access including ACL management"
        member_permissions:
          - permission: "create"
            restrict_object_type: null
          - permission: "read"
            restrict_object_type: null
          - permission: "update"
            restrict_object_type: null
          - permission: "delete"
            restrict_object_type: null
          - permission: "create_acls"
            restrict_object_type: null
          - permission: "read_acls"
            restrict_object_type: null
          - permission: "update_acls"
            restrict_object_type: null
          - permission: "delete_acls"
            restrict_object_type: null
      
      # Engineering role with full development access
      - name: "Engineer"
        description: "Full development access without ACL management"
        member_permissions:
          - permission: "create"
            restrict_object_type: null
          - permission: "read"
            restrict_object_type: null
          - permission: "update"
            restrict_object_type: null
          - permission: "delete"
            restrict_object_type: null
      
      # Data science role with experiment/dataset focus
      - name: "DataScientist"
        description: "Data science permissions for experiments and datasets"
        member_permissions:
          - permission: "read"
            restrict_object_type: null
          - permission: "create"
            restrict_object_type: "experiment"
          - permission: "create"
            restrict_object_type: "dataset"
          - permission: "update"
            restrict_object_type: "experiment"
          - permission: "update"
            restrict_object_type: "dataset"
          - permission: "delete"
            restrict_object_type: "experiment"
          - permission: "delete"
            restrict_object_type: "dataset"
      
      # Project management role
      - name: "ProjectManager"
        description: "Project management with team assignment capabilities"
        member_permissions:
          - permission: "create"
            restrict_object_type: null
          - permission: "read"
            restrict_object_type: null
          - permission: "update"
            restrict_object_type: null
          - permission: "delete"
            restrict_object_type: null
          - permission: "create_acls"
            restrict_object_type: "project"
          - permission: "read_acls"
            restrict_object_type: "project"
          - permission: "update_acls"
            restrict_object_type: "project"
      
      # Read-only viewer role
      - name: "Viewer"
        description: "Read-only access to all content"
        member_permissions:
          - permission: "read"
            restrict_object_type: null
      
      # Contractor role with limited access
      - name: "Contractor"
        description: "Limited access for external contractors"
        member_permissions:
          - permission: "read"
            restrict_object_type: null
          - permission: "create"
            restrict_object_type: "experiment"
    
    auto_create_roles: true
    update_existing_roles: false
    
    # ========== Group-Role-Project Assignments ==========
    group_assignments:
      # ========== Leadership and Admin Access ==========
      # Leadership gets Admin role on all projects
      - group_name: "Leadership"
        role_name: "Admin"
        project_match:
          all_projects: true
        enabled: true
        priority: 100
      
      # Engineering managers get ProjectManager role on engineering projects
      - group_name: "EngineeringManagers"
        role_name: "ProjectManager"
        project_match:
          name_pattern: "(?i).*(eng|dev|api|service|infrastructure).*"
        enabled: true
        priority: 50
      
      # ========== Engineering Team Access ==========
      # Engineering team gets Engineer role on development projects
      - group_name: "Engineering"
        role_name: "Engineer"
        project_match:
          name_contains: ["dev", "api", "service", "web", "mobile"]
          exclude_patterns: [".*-archived$", ".*-deprecated$"]
        enabled: true
        priority: 20
      
      # Engineering team gets Engineer role on ML/AI projects
      - group_name: "Engineering"
        role_name: "Engineer"
        project_match:
          name_pattern: "(?i).*(ml|ai|model|nlp|cv).*"
        enabled: true
        priority: 20
      
      # ========== Data Science Team Access ==========
      # Data science team gets DataScientist role on research projects
      - group_name: "DataScience"
        role_name: "DataScientist"
        project_match:
          name_contains: ["research", "experiment", "data", "analytics", "ml"]
        enabled: true
        priority: 20
      
      # Data science team gets DataScientist role on model projects
      - group_name: "DataScience"
        role_name: "DataScientist"
        project_match:
          name_pattern: "^(model|algorithm|prediction)[-_].*"
        enabled: true
        priority: 20
      
      # ========== Product Management Access ==========
      # Product managers get ProjectManager role on product projects
      - group_name: "ProductManagement"
        role_name: "ProjectManager"
        project_match:
          name_contains: ["product", "feature", "user", "customer"]
        enabled: true
        priority: 25
      
      # ========== Senior Staff Access ==========
      # Senior staff gets broader access across projects
      - group_name: "SeniorStaff"
        role_name: "ProjectManager"
        project_match:
          all_projects: true
          exclude_patterns: [".*-sensitive$", ".*-confidential$"]
        enabled: true
        priority: 30
      
      # ========== Contractor Access ==========
      # External contractors get limited access to specific projects
      - group_name: "ExternalContractors"
        role_name: "Contractor"
        project_match:
          name_contains: ["public", "external", "demo", "poc"]
        enabled: true
        priority: 10
      
      # ========== Default Access ==========
      # All employees get Viewer access to public projects
      - group_name: "AllEmployees"
        role_name: "Viewer"
        project_match:
          name_starts_with: "public-"
        enabled: true
        priority: 1
      
      # All employees get Viewer access to company-wide projects
      - group_name: "AllEmployees"
        role_name: "Viewer"
        project_match:
          name_contains: ["company", "all-hands", "shared"]
        enabled: true
        priority: 1
    
    remove_unmanaged_acls: false
    dry_run: false
  
  # ========== Organization-Specific Overrides ==========
  org_configs:
    # Production org - more restrictive
    - braintrust_org: "production"
      enabled: true
      role_project_config:
        # Inherit standard roles but with additional restrictions
        standard_roles:
          - name: "ProdEngineer"
            description: "Production engineer with read and limited update access"
            member_permissions:
              - permission: "read"
                restrict_object_type: null
              - permission: "update"
                restrict_object_type: "experiment"
        
        group_assignments:
          # Only senior staff gets full Engineer role in production
          - group_name: "SeniorStaff"
            role_name: "Engineer"
            project_match:
              name_pattern: "^prod-.*"
            enabled: true
            priority: 30
          
          # Regular engineers get limited role in production
          - group_name: "Engineering"
            role_name: "ProdEngineer"
            project_match:
              name_pattern: "^prod-.*"
            enabled: true
            priority: 20
          
          # Leadership maintains admin access
          - group_name: "Leadership"
            role_name: "Admin"
            project_match:
              all_projects: true
            enabled: true
            priority: 100
        
        auto_create_roles: true
        update_existing_roles: true
        remove_unmanaged_acls: false
        dry_run: false

# ========== Sync Configuration ==========
sync_modes:
  declarative:
    enabled: true
    schedule: "0 */6 * * *"  # Every 6 hours
    full_reconciliation: "0 2 * * 0"  # Weekly on Sunday
  
  realtime:
    enabled: false

sync_options:
  dry_run: false
  batch_size: 50
  max_retries: 3
  continue_on_error: true

# ========== Audit Configuration ==========
audit:
  enabled: true
  log_level: "INFO"
  log_format: "json"
  retention_days: 90

# =====================================================================
# Workflow Summary:
# =====================================================================
# 1. Users are synced from Okta to Braintrust organizations
# 2. Users are assigned to Braintrust groups based on:
#    - Their Okta group memberships (BT-* groups)
#    - Their profile attributes (department, title, employee type)
# 3. Roles are created in Braintrust with specific permission sets
# 4. Groups are assigned to roles on specific projects via ACLs:
#    - Engineering → Engineer role on dev/ML projects
#    - DataScience → DataScientist role on research/data projects
#    - ProductManagement → ProjectManager role on product projects
#    - Leadership → Admin role on all projects
#    - Contractors → Contractor role on public/demo projects
#    - AllEmployees → Viewer role on shared projects
# 5. Different rules apply for production vs development orgs
#
# Benefits:
# - Granular permissions via roles
# - Automatic group assignment based on Okta data
# - Project-specific access control
# - Maintainable through configuration
# - Role changes apply automatically to all assigned users
# =====================================================================